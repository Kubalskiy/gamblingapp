<?php

namespace app\controllers;

use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;

class GameController extends Controller
{
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                    'index' => ['post', 'get'],
                ],
            ],
        ];
    }

    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function beforeAction($action)
    {
        \Yii::$app->session->open();
        \Yii::$app->session->getId();
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $session    = \Yii::$app->session;
        $game       = new \app\models\Game();
        $msg='';
        $data = [];
        $data['credits'] = 0;

        if (!\Yii::$app->user->isGuest) {
            $userid     = \Yii::$app->user->id;
            $userData = \app\models\User::findIdentity($userid);
            $userProfile = $game->getUserProfile($userid);
            $data['credits'] = $userProfile->credits;
            $data['email']   = $userData->email;
            $game->updateProfile($userid, ['lastActivity' => time()]);
        }
        else {
            $data['credits'] = $session->get('credits', 10);
        }

        if (isset($_POST['sendInvite'])) {
            if (!empty($_POST['email'])) {
                file_put_contents(\Yii::$app->getBasePath() . '/emails.txt', date('d-m-Y H:i:s') . ' - ' . $_POST['email'] . "\n", FILE_APPEND);

                $msg = '<div class="alert alert-success">' . \Yii::t('app', 'Your request is accepted and will be considered by the administrator of the club') . '</div>';
            }
        }

        $data['hasGame'] = false; //send to view exist game
        if ($openGame   = $session->get('yourGameId'))
            $data['hasGame'] = $game->getUserGameByGameId($openGame);

        if ($openGame = $game->getUserGame())
            $data['hasGame'] = $game->getUserGameByGameId($openGame->id);

        \Yii::$app->view->registerJsFile('@web/js/main.js', ['depends' => [\yii\web\JqueryAsset::className()]]);
        \Yii::$app->view->registerJsFile('@web/js/counter.min.js', ['depends' => [\yii\web\JqueryAsset::className()]]);
        \Yii::$app->view->registerCssFile('@web/css/counter.css');

        return $this->render('index',['msg' => $msg, 'data' => $data]);
    }

    public function actionPlay()
    {
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $yourBet    = \Yii::$app->request->get('bet');

        $session    = \Yii::$app->session;
        $game       = new \app\models\Game();
        $openGame   = $session->get('yourGameId');
//        $openGame = false; //DEBUG!!!
        $isGuest =  (\Yii::$app->user->isGuest) ? 1 : 0;

        $result                 = new \stdClass();
        $result->hasOpponent 	= false;
        $result->partBet        = false;
        $result->yourBet    	= $yourBet;

        if (!$isGuest) {
            $userid     = \Yii::$app->user->id;
            $game->updateProfile($userid, ['lastActivity' => time()]);
        }
        else {
            $userid = $game->getSesUserId();
        }

        if ($openGame) { //check for exist game in session
            $result->error = \Yii::t('app', 'You can\'t start new game before finish exist');
            return $result;
        }

        if ($openGame = $game->getUserGame()) { //check exist game in DB and save tino session if exist
            $session->set('yourGameId', $openGame->id);
            $result->error = \Yii::t('app', 'You can\'t start new game before finish exist');
            return $result;
        }

        $yourCredits = $game->getUserCredits($userid);

        if ($yourCredits < 1 OR $yourCredits < $yourBet) {
            $result->error = \Yii::t('app', 'You can\'t start new game. You need more credits!');
            return $result;
        }

        $opponent = $game->findOpponent($yourBet);

        if (!$opponent)
        {
            $session->set('yourGameId', $game->addToQueue($userid, $yourBet, 'credit', $isGuest));
            return $result;
        }

        $result->opponent = $game->getUserName($opponent->userId, $opponent->isGuest);

        $youDrop = mt_rand(10000,99999);
        $oppDrop = mt_rand(10000,99999);

        if ($yourBet > $opponent->bet)
        {
            $bet = $opponent->bet;
            $result->partBet = true;
            $result->leftBet = $yourBet - $opponent->bet; //СДЕЛАТЬ ЧТОБЫ СО СЧЁТА СИНМАЛО ПОСЛЕ ИГРЫ И ОТДАВАТЬ ОСТАТОК!
        }
        else
        {
            $bet = $yourBet;
        }

        if ($youDrop > $oppDrop)
        {
            $result->win        = 'win';
            $winner             = $userid;
            $result->credits	= $yourCredits + $bet;
        }
        else
        {
            $result->win        = 'lose';
            $winner             = $opponent->userId;
            $result->credits	= $yourCredits - $bet;
        }

        if (!$isGuest) {
            $game->updateProfile($userid, ['credits' => $result->credits]);
        }
        else {
            $session->set('credits', $result->credits);
        }

        $logId = $game->savePlayedGame($yourBet, $opponent->bet, $opponent->userId, $youDrop, $oppDrop, $winner, $isGuest, $opponent->isGuest); //save game log

        $game->updateQueue($opponent->id, ['logId' => $logId]); //save log Id as finished for opponent part of game handler

        $result->bet    		= $bet;
        $result->yourDrop		= $youDrop;
        $result->oppDrop		= $oppDrop;
        $result->hasOpponent 	= true;

        return $result;
    }

    public function actionCheck()
    {
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;


        $session    = \Yii::$app->session;
        $game       = new \app\models\Game();
        $openGame   = $session->get('yourGameId');
        $isGuest    =  (\Yii::$app->user->isGuest) ? 1 : 0;

        $result                 = new \stdClass();
        $result->gameNotExist 	= false;
        $result->hasOpponent 	= false;
        $result->partBet        = false;
        $result->canNotPlay     = false;

        if (!$isGuest) {
            $userid     = \Yii::$app->user->id;
            $game->updateProfile($userid, ['lastActivity' => time()]);
        }
        else {
            $userid = $game->getSesUserId();
        }

        if (!$openGame = $game->getUserGameByGameId($openGame)) { //check for exist game in session
            if (!$openGame = $game->getUserGame()) { //check exist game in DB and save tino session if exist
                $session->remove('yourGameId');
                $result->gameNotExist = true;
                return $result;
            }
        }

        if (!$openGame->logId) //has not opponent again
            return $result;

        $session->remove('yourGameId');

        $yourCredits = $game->getUserCredits($userid);

        $gameLog = $game->getGameLogByLogId($openGame->logId);

        $you = ($gameLog->user1Id == $userid) ? '1' : '2';
        $opp = ($you == '1') ? '2' : '1';

        $oppUserId = "user".$opp."Id";

        $result->opponent = $game->getUserName($gameLog->{$oppUserId}, $gameLog->{"isUser".$opp."Guest"});

        if ($gameLog->{"betUser$you"} > $gameLog->{"betUser$opp"})
        {
            $bet = $gameLog->{"betUser$opp"};
            $result->partBet = true;
            $result->leftBet = $gameLog->{"betUser$you"} - $gameLog->{"betUser$opp"}; //СДЕЛАТЬ ЧТОБЫ СО СЧЁТА СИНМАЛО ПОСЛЕ ИГРЫ И ОТДАВАТЬ ОСТАТОК!
        }
        else
        {
            $bet = $gameLog->{"betUser$you"};
        }

        if ($gameLog->{"dropUser$you"} > $gameLog->{"dropUser$opp"})
        {
            $result->win        = 'win';
            $result->credits	= $yourCredits + $bet;
        }
        else
        {
            $result->win        = 'lose';
            $result->credits	= $yourCredits - $bet;
        }

        if ($result->credits < 0)
            $result->credits = 0;

        if ($result->credits == 0)
            $result->canNotPlay = true;

        if (!$isGuest) {
            $game->updateProfile($userid, ['credits' => $result->credits]);//update credits
        }
        else {
            $session->set('credits', $result->credits);
        }

        $game->updateQueue($openGame->id, ['finished' => 1]); //finish gameQueue

        $result->bet    		= $bet;
        $result->oppBet    		= $gameLog->{"betUser$opp"};
        $result->yourBet   		= $gameLog->{"betUser$you"};
        $result->yourDrop		= $gameLog->{"dropUser$you"};
        $result->oppDrop		= $gameLog->{"dropUser$opp"};
        $result->hasOpponent 	= true;

        return $result;
    }

    public function actionCreditrequest()
    {
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $game        = new \app\models\Game();

        $userid      = \Yii::$app->user->id;
        $yourCredits = $game->getUserCredits($userid);

        $result                 = new \stdClass();
        $result->enough         = false;


        if (\Yii::$app->user->isGuest) {
            if ($yourCredits > 0)
                return false;
            $result->credits = 5;
            \Yii::$app->session->set('credits', $result->credits);
            return $result;
        }

        $result->credits        = $yourCredits + 100;

        if ($result->credits > 200) {
            $result->enough = true;
            return $result;
        }

        $game->updateProfile($userid, ['credits' => $result->credits]);

        return $result;
    }

    public function actionFixbet()
    {
        \Yii::$app->session->set('fixedBet', \Yii::$app->request->get('state'));

    }
}